(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{183:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return s}));var n=a(3),p=a(7),r=(a(0),a(201)),o={title:"Multi-Revision, Multi-Cluster Deploy"},l={unversionedId:"rollout/appdeploy",id:"rollout/appdeploy",isDocsHomePage:!1,title:"Multi-Revision, Multi-Cluster Deploy",description:"The files needed for the tutorial are in docs/examples/appdeployment,",source:"@site/docs/rollout/appdeploy.md",slug:"/rollout/appdeploy",permalink:"/docs/rollout/appdeploy",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/rollout/appdeploy.md",version:"current",lastUpdatedBy:"kubevela-bot",lastUpdatedAt:1617014017,formattedLastUpdatedAt:"3/29/2021",sidebar:"docs",previous:{title:"Progressive Rollout",permalink:"/docs/rollout/rollout"},next:{title:"Overview",permalink:"/docs/platform-engineers/overview"}},c=[],i={toc:c};function s(e){var t=e.components,a=Object(p.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The files needed for the tutorial are in ",Object(r.b)("a",{parentName:"p",href:"https://github.com/oam-dev/kubevela/tree/master/docs/examples/appdeployment"},Object(r.b)("inlineCode",{parentName:"a"},"docs/examples/appdeployment")),",\nplease execute the cmds of this tutorial in this path."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Create an Application"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ cat <<EOF | kubectl apply -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-app\n  annotations:\n    app.oam.dev/revision-only: "true"\nspec:\n  components:\n    - name: testsvc\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8000\nEOF\n')),Object(r.b)("p",{parentName:"li"},"This will create ",Object(r.b)("inlineCode",{parentName:"p"},"example-app-v1")," AppRevision. Check it:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get applicationrevisions.core.oam.dev\nNAME             AGE\nexample-app-v1   116s\n")),Object(r.b)("p",{parentName:"li"},"With above annotation this won't create any pod instances.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Then use the above AppRevision to create an AppDeployment."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f appdeployment-1.yaml\n")),Object(r.b)("blockquote",{parentName:"li"},Object(r.b)("p",{parentName:"blockquote"},"Note that in order to AppDeployment to work, your workload object must have a ",Object(r.b)("inlineCode",{parentName:"p"},"spec.replicas")," field for scaling."))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Now you can check that there will 1 deployment and 2 pod instances deployed"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get deploy\nNAME         READY   UP-TO-DATE   AVAILABLE   AGE\ntestsvc-v1   2/2     2            0           27s\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Update Application properties:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},'$ cat <<EOF | kubectl apply -f -\napiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: example-app\n  annotations:\n    app.oam.dev/revision-only: "true"\nspec:\n  components:\n    - name: testsvc\n      type: webservice\n      properties:\n        image: nginx\n        port: 80\nEOF\n')),Object(r.b)("p",{parentName:"li"},"This will create a new ",Object(r.b)("inlineCode",{parentName:"p"},"example-app-v2")," AppRevision. Check it:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get applicationrevisions.core.oam.dev\nNAME\nexample-app-v1\nexample-app-v2\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Then use the two AppRevisions to update the AppDeployment:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl apply -f appdeployment-2.yaml\n")),Object(r.b)("p",{parentName:"li"},"(Optional) If you have Istio installed, you can apply the AppDeployment with traffic split:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"# set up gateway if not yet\n$ kubectl apply -f gateway.yaml\n\n$ kubectl apply -f appdeployment-2-traffic.yaml\n")),Object(r.b)("p",{parentName:"li"},"Note that for traffic split to work, your must have the following labels set in pods (This is automatically set in default ",Object(r.b)("inlineCode",{parentName:"p"},"webservice")," workload template):"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},'"app.oam.dev/component": "testsvc"\n"app.oam.dev/appRevision": "example-app-v1"\n'))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Now you can check that there will 1 deployment and 1 pod per revision."),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get deploy\nNAME         READY   UP-TO-DATE   AVAILABLE   AGE\ntestsvc-v1   1/1     1            1           2m14s\ntestsvc-v2   1/1     1            1           8s\n")),Object(r.b)("p",{parentName:"li"},"(Optional) To verify traffic split:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},'# run this in another terminal\n$ kubectl -n istio-system port-forward service/istio-ingressgateway 8080:80\nForwarding from 127.0.0.1:8080 -> 8080\nForwarding from [::1]:8080 -> 8080\n\n# The command should return pages of either docker whale or nginx in 50/50\n$ curl -H "Host: example-app.example.com" http://localhost:8080/\n'))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Cleanup:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-shell"},"kubectl delete appdeployments.core.oam.dev  --all\nkubectl delete applications.core.oam.dev --all\n")))))}s.isMDXComponent=!0},201:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return d}));var n=a(0),p=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,p=function(e,t){if(null==e)return{};var a,n,p={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(p[a]=e[a]);return p}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(p[a]=e[a])}return p}var i=p.a.createContext({}),s=function(e){var t=p.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=s(e.components);return p.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return p.a.createElement(p.a.Fragment,{},t)}},u=p.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),m=s(a),u=n,d=m["".concat(o,".").concat(u)]||m[u]||b[u]||r;return a?p.a.createElement(d,l(l({ref:t},i),{},{components:a})):p.a.createElement(d,l({ref:t},i))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var i=2;i<r;i++)o[i]=a[i];return p.a.createElement.apply(null,o)}return p.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);