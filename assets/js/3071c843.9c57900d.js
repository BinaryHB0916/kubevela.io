(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{123:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return s})),a.d(n,"metadata",(function(){return i})),a.d(n,"toc",(function(){return c})),a.d(n,"default",(function(){return p}));var t=a(3),r=a(7),o=(a(0),a(341)),s={title:"Crossplane"},i={unversionedId:"platform-engineers/crossplane",id:"platform-engineers/crossplane",isDocsHomePage:!1,title:"Crossplane",description:"In this documentation, we will use Alibaba Cloud's RDS (Relational Database Service), and Alibaba Cloud's OSS (Object Storage System) as examples to show how to enable cloud services as part of the application deployment.",source:"@site/docs/platform-engineers/crossplane.md",slug:"/platform-engineers/crossplane",permalink:"/docs/next/platform-engineers/crossplane",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/en/platform-engineers/crossplane.md",version:"current",lastUpdatedBy:"kubevela-bot",lastUpdatedAt:1620154848,formattedLastUpdatedAt:"5/4/2021",sidebar:"docs",previous:{title:"Terraform",permalink:"/docs/next/platform-engineers/terraform"},next:{title:"How-to",permalink:"/docs/next/platform-engineers/cue/trait"}},c=[{value:"Prepare Crossplane",id:"prepare-crossplane",children:[]},{value:"Register <code>alibaba-rds</code> Component",id:"register-alibaba-rds-component",children:[]},{value:"Register <code>alibaba-oss</code> Component",id:"register-alibaba-oss-component",children:[]}],l={toc:c};function p(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},l,a,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In this documentation, we will use Alibaba Cloud's RDS (Relational Database Service), and Alibaba Cloud's OSS (Object Storage System) as examples to show how to enable cloud services as part of the application deployment."),Object(o.b)("p",null,"These cloud services are provided by Crossplane."),Object(o.b)("h2",{id:"prepare-crossplane"},"Prepare Crossplane"),Object(o.b)("details",null,"Please Refer to [Installation](https://github.com/crossplane/provider-alibaba/releases/tag/v0.5.0) to install Crossplane Alibaba provider v0.5.0.",Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"If you'd like to configure any other Crossplane providers, please refer to ",Object(o.b)("a",{parentName:"p",href:"https://crossplane.io/docs/v1.1/getting-started/install-configure.html#select-a-getting-started-configuration"},"Crossplane Select a Getting Started Configuration"),".")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"$ kubectl crossplane install provider crossplane/provider-alibaba:v0.5.0\n\n# Note the xxx and yyy here is your own AccessKey and SecretKey to the cloud resources.\n$ kubectl create secret generic alibaba-account-creds -n crossplane-system --from-literal=accessKeyId=xxx --from-literal=accessKeySecret=yyy\n\n$ kubectl apply -f provider.yaml\n")),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"provider.yaml")," is as below."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Namespace\nmetadata:\n  name: crossplane-system\n\n---\napiVersion: alibaba.crossplane.io/v1alpha1\nkind: ProviderConfig\nmetadata:\n  name: default\nspec:\n  credentials:\n    source: Secret\n    secretRef:\n      namespace: crossplane-system\n      name: alibaba-account-creds\n      key: credentials\n  region: cn-beijing\n"))),Object(o.b)("h2",{id:"register-alibaba-rds-component"},"Register ",Object(o.b)("inlineCode",{parentName:"h2"},"alibaba-rds")," Component"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: alibaba-rds\n  namespace: vela-system\n  annotations:\n    definition.oam.dev/description: "Alibaba Cloud RDS Resource"\nspec:\n  workload:\n    definition:\n      apiVersion: database.alibaba.crossplane.io/v1alpha1\n      kind: RDSInstance\n  schematic:\n    cue:\n      template: |\n        output: {\n            apiVersion: "database.alibaba.crossplane.io/v1alpha1"\n            kind:       "RDSInstance"\n            spec: {\n                forProvider: {\n                    engine:                parameter.engine\n                    engineVersion:         parameter.engineVersion\n                    dbInstanceClass:       parameter.instanceClass\n                    dbInstanceStorageInGB: 20\n                    securityIPList:        "0.0.0.0/0"\n                    masterUsername:        parameter.username\n                }\n                writeConnectionSecretToRef: {\n                    namespace: context.namespace\n                    name:      parameter.secretName\n                }\n                providerConfigRef: {\n                    name: "default"\n                }\n                deletionPolicy: "Delete"\n            }\n        }\n        parameter: {\n            // +usage=RDS engine\n            engine: *"mysql" | string\n            // +usage=The version of RDS engine\n            engineVersion: *"8.0" | string\n            // +usage=The instance class for the RDS\n            instanceClass: *"rds.mysql.c1.large" | string\n            // +usage=RDS username\n            username: string\n            // +usage=Secret name which RDS connection will write to\n            secretName: string\n        }\n\n\n')),Object(o.b)("h2",{id:"register-alibaba-oss-component"},"Register ",Object(o.b)("inlineCode",{parentName:"h2"},"alibaba-oss")," Component"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: alibaba-oss\n  namespace: vela-system\n  annotations:\n    definition.oam.dev/description: "Alibaba Cloud RDS Resource"\nspec:\n  workload:\n    definition:\n      apiVersion: oss.alibaba.crossplane.io/v1alpha1\n      kind: Bucket\n  schematic:\n    cue:\n      template: |\n        output: {\n            apiVersion: "oss.alibaba.crossplane.io/v1alpha1"\n            kind:       "Bucket"\n            spec: {\n                name:               parameter.name\n                acl:                parameter.acl\n                storageClass:       parameter.storageClass\n                dataRedundancyType: parameter.dataRedundancyType\n                writeConnectionSecretToRef: {\n                    namespace: context.namespace\n                    name:      parameter.secretName\n                }\n                providerConfigRef: {\n                    name: "default"\n                }\n                deletionPolicy: "Delete"\n            }\n        }\n        parameter: {\n            // +usage=OSS bucket name\n            name: string\n            // +usage=The access control list of the OSS bucket\n            acl: *"private" | string\n            // +usage=The storage type of OSS bucket\n            storageClass: *"Standard" | string\n            // +usage=The data Redundancy type of OSS bucket\n            dataRedundancyType: *"LRS" | string\n            // +usage=Secret name which RDS connection will write to\n            secretName: string\n        }\n\n')))}p.isMDXComponent=!0},341:function(e,n,a){"use strict";a.d(n,"a",(function(){return d})),a.d(n,"b",(function(){return u}));var t=a(0),r=a.n(t);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},m=r.a.forwardRef((function(e,n){var a=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(a),m=t,u=d["".concat(s,".").concat(m)]||d[m]||b[m]||o;return a?r.a.createElement(u,i(i({ref:n},l),{},{components:a})):r.a.createElement(u,i({ref:n},l))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var o=a.length,s=new Array(o);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:t,s[1]=i;for(var l=2;l<o;l++)s[l]=a[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);