(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[1422],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return u}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),u=o,h=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},66427:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p},default:function(){return s}});var a=n(22122),o=n(19756),r=(n(67294),n(3905)),i={title:"How-to"},l={unversionedId:"helm/component",id:"version-v1.0/helm/component",isDocsHomePage:!1,title:"How-to",description:"In this section, it will introduce how to declare Helm charts as app components via ComponentDefinition.",source:"@site/versioned_docs/version-v1.0/helm/component.md",sourceDirName:"helm",slug:"/helm/component",permalink:"/zh/docs/helm/component",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/zh/helm/component.md",version:"v1.0",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1619772878,formattedLastUpdatedAt:"4/30/2021",frontMatter:{title:"How-to"},sidebar:"version-v1.0/docs",previous:{title:"Learning CUE",permalink:"/zh/docs/cue/basic"},next:{title:"Attach Traits",permalink:"/zh/docs/helm/trait"}},p=[{value:"Prerequisite",id:"prerequisite",children:[]},{value:"Declare <code>ComponentDefinition</code>",id:"declare-componentdefinition",children:[]},{value:"Declare an <code>Application</code>",id:"declare-an-application",children:[{value:"Generate Form from Helm Based Components",id:"generate-form-from-helm-based-components",children:[]}]}],c={toc:p};function s(e){var t=e.components,n=(0,o.Z)(e,["components"]);return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this section, it will introduce how to declare Helm charts as app components via ",(0,r.kt)("inlineCode",{parentName:"p"},"ComponentDefinition"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Before reading this part, please make sure you've learned ",(0,r.kt)("a",{parentName:"p",href:"../platform-engineers/definition-and-templates"},"the definition and template concepts"),".")),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Make sure you have enabled Helm support in the ",(0,r.kt)("a",{parentName:"li",href:"/docs/install"},"installation guide"),".")),(0,r.kt)("h2",{id:"declare-componentdefinition"},"Declare ",(0,r.kt)("inlineCode",{parentName:"h2"},"ComponentDefinition")),(0,r.kt)("p",null,"Here is an example ",(0,r.kt)("inlineCode",{parentName:"p"},"ComponentDefinition")," about how to use Helm as schematic module."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: ComponentDefinition\nmetadata:\n  name: webapp-chart\n  annotations:\n    definition.oam.dev/description: helm chart for webapp\nspec:\n  workload:\n    definition:\n      apiVersion: apps/v1\n      kind: Deployment\n  schematic:\n    helm:\n      release:\n        chart:\n          spec:\n            chart: "podinfo"\n            version: "5.1.4"\n      repository:\n        url: "http://oam.dev/catalog/"\n')),(0,r.kt)("p",null,"In detail:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.workload")," is required to indicate the workload type of this Helm based component. Please also check for ",(0,r.kt)("a",{parentName:"li",href:"/docs/helm/known-issues?id=workload-type-indicator"},"Known Limitations")," if you have multiple workloads packaged in one chart."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".spec.schematic.helm")," contains information of Helm ",(0,r.kt)("inlineCode",{parentName:"li"},"release")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"repository")," which leverages ",(0,r.kt)("inlineCode",{parentName:"li"},"fluxcd/flux2"),".",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"i.e. the pec of ",(0,r.kt)("inlineCode",{parentName:"li"},"release")," aligns with ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/fluxcd/helm-controller/blob/main/docs/api/helmrelease.md"},(0,r.kt)("inlineCode",{parentName:"a"},"HelmReleaseSpec"))," and spec of ",(0,r.kt)("inlineCode",{parentName:"li"},"repository")," aligns with ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/fluxcd/source-controller/blob/main/docs/api/source.md#source.toolkit.fluxcd.io/v1beta1.HelmRepository"},(0,r.kt)("inlineCode",{parentName:"a"},"HelmRepositorySpec")),".")))),(0,r.kt)("h2",{id:"declare-an-application"},"Declare an ",(0,r.kt)("inlineCode",{parentName:"h2"},"Application")),(0,r.kt)("p",null,"Here is an example ",(0,r.kt)("inlineCode",{parentName:"p"},"Application"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: myapp\n  namespace: default\nspec:\n  components:\n    - name: demo-podinfo \n      type: webapp-chart \n      properties: \n        image:\n          tag: "5.1.2"\n')),(0,r.kt)("p",null,"The component ",(0,r.kt)("inlineCode",{parentName:"p"},"properties")," is exactly the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/captainroy-hy/podinfo/blob/master/charts/podinfo/values.yaml"},"overlay values")," of the Helm chart."),(0,r.kt)("p",null,"Deploy the application and after several minutes (it may take time to fetch Helm chart), you can check the Helm release is installed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ helm ls -A\nmyapp-demo-podinfo  default   1   2021-03-05 02:02:18.692317102 +0000 UTC deployed  podinfo-5.1.4     5.1.4\n")),(0,r.kt)("p",null,"Check the workload defined in the chart has been created successfully."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get deploy\nNAME                     READY   UP-TO-DATE   AVAILABLE   AGE\nmyapp-demo-podinfo   1/1     1            1           66m\n")),(0,r.kt)("p",null,"Check the values (",(0,r.kt)("inlineCode",{parentName:"p"},"image.tag = 5.1.2"),") from application's ",(0,r.kt)("inlineCode",{parentName:"p"},"properties")," are assigned to the chart."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get deployment myapp-demo-podinfo -o json | jq '.spec.template.spec.containers[0].image'\n\"ghcr.io/stefanprodan/podinfo:5.1.2\"\n")),(0,r.kt)("h3",{id:"generate-form-from-helm-based-components"},"Generate Form from Helm Based Components"),(0,r.kt)("p",null,"KubeVela will automatically generate OpenAPI v3 JSON schema based on ",(0,r.kt)("a",{parentName:"p",href:"https://helm.sh/docs/topics/charts/#schema-files"},(0,r.kt)("inlineCode",{parentName:"a"},"values.schema.json"))," in the Helm chart, and store it in a ",(0,r.kt)("inlineCode",{parentName:"p"},"ConfigMap")," in the same ",(0,r.kt)("inlineCode",{parentName:"p"},"namespace")," with the definition object. Furthermore, if ",(0,r.kt)("inlineCode",{parentName:"p"},"values.schema.json")," is not provided by the chart author, KubeVela will generate OpenAPI v3 JSON schema based on its ",(0,r.kt)("inlineCode",{parentName:"p"},"values.yaml")," file automatically. "),(0,r.kt)("p",null,"Please check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/platform-engineers/openapi-v3-json-schema"},"Generate Forms from Definitions")," guide for more detail of using this schema to render GUI forms."))}s.isMDXComponent=!0}}]);