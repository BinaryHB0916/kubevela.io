(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{304:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return p}));var r=t(3),o=t(7),a=(t(0),t(333)),s={title:"Provision and Consume Cloud Resources"},c={unversionedId:"end-user/cloud-resources",id:"end-user/cloud-resources",isDocsHomePage:!1,title:"Provision and Consume Cloud Resources",description:"\u26a0\ufe0f This section requires your platform builder has already installed the cloud resources related capabilities.",source:"@site/docs/end-user/cloud-resources.md",slug:"/end-user/cloud-resources",permalink:"/zh/docs/next/end-user/cloud-resources",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/zh/end-user/cloud-resources.md",version:"current",lastUpdatedBy:"kubevela-bot",lastUpdatedAt:1618586647,formattedLastUpdatedAt:"4/16/2021",sidebar:"docs",previous:{title:"Attach Sidecar",permalink:"/zh/docs/next/end-user/sidecar"},next:{title:"Attach Volumes",permalink:"/zh/docs/next/end-user/volumes"}},i=[{value:"Provision and consume cloud resource in a single application v1 (one cloud resource)",id:"provision-and-consume-cloud-resource-in-a-single-application-v1-one-cloud-resource",children:[]},{value:"Provision and consume cloud resource in a single application v2 (two cloud resources)",id:"provision-and-consume-cloud-resource-in-a-single-application-v2-two-cloud-resources",children:[]},{value:"Provision and consume cloud resource in different applications",id:"provision-and-consume-cloud-resource-in-different-applications",children:[{value:"Provision Cloud Resource",id:"provision-cloud-resource",children:[]},{value:"Consume the Cloud Resource",id:"consume-the-cloud-resource",children:[]}]}],l={toc:i};function p(e){var n=e.components,s=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,s,{components:n,mdxType:"MDXLayout"}),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f This section requires your platform builder has already installed the ",Object(a.b)("a",{parentName:"p",href:"../platform-engineers/cloud-services"},"cloud resources related capabilities"),".")),Object(a.b)("h2",{id:"provision-and-consume-cloud-resource-in-a-single-application-v1-one-cloud-resource"},"Provision and consume cloud resource in a single application v1 (one cloud resource)"),Object(a.b)("p",null,"Check the parameters of cloud resource component:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl vela show alibaba-rds\n\n# Properties\n+---------------+------------------------------------------------+--------+----------+--------------------+\n|     NAME      |                  DESCRIPTION                   |  TYPE  | REQUIRED |      DEFAULT       |\n+---------------+------------------------------------------------+--------+----------+--------------------+\n| engine        | RDS engine                                     | string | true     | mysql              |\n| engineVersion | The version of RDS engine                      | string | true     |                8.0 |\n| instanceClass | The instance class for the RDS                 | string | true     | rds.mysql.c1.large |\n| username      | RDS username                                   | string | true     |                    |\n| secretName    | Secret name which RDS connection will write to | string | true     |                    |\n+---------------+------------------------------------------------+--------+----------+--------------------+\n")),Object(a.b)("p",null,"Use the service binding trait to bind cloud resources into workload as ENV."),Object(a.b)("p",null,"Create an application with a cloud resource provisioning component and a consuming component as below."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn\n                key: password                                     # 1) If the env name is different from secret key, secret key has to be set.\n              endpoint:\n                secret: db-conn                                   # 2) If the env name is the same as the secret key, secret key can be omitted.\n              username:\n                secret: db-conn\n\n    - name: sample-db\n      type: alibaba-rds\n      properties:\n        name: sample-db\n        engine: mysql\n        engineVersion: "8.0"\n        instanceClass: rds.mysql.c1.large\n        username: oamtest\n        secretName: db-conn\n\n')),Object(a.b)("p",null,"Apply it and verify the application."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get application\nNAME     AGE\nwebapp   46m\n\n$ kubectl port-forward deployment/express-server 80:80\nForwarding from 127.0.0.1:80 -> 80\nForwarding from [::1]:80 -> 80\nHandling connection for 80\nHandling connection for 80\n")),Object(a.b)("p",null,Object(a.b)("img",{src:t(388).default})),Object(a.b)("h2",{id:"provision-and-consume-cloud-resource-in-a-single-application-v2-two-cloud-resources"},"Provision and consume cloud resource in a single application v2 (two cloud resources)"),Object(a.b)("p",null,"Based on the section ",Object(a.b)("inlineCode",{parentName:"p"},"Provisioning and consuming cloud resource in a single application v1 (one cloud resource)"),", "),Object(a.b)("p",null,"Update the application to also consume cloud resource OSS."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn\n                key: password                                     # 1) If the env name is different from secret key, secret key has to be set.\n              endpoint:\n                secret: db-conn                                   # 2) If the env name is the same as the secret key, secret key can be omitted.\n              username:\n                secret: db-conn\n              # environments refer to oss-conn secret\n              BUCKET_NAME:\n                secret: oss-conn\n                key: Bucket\n\n    - name: sample-db\n      type: alibaba-rds\n      properties:\n        name: sample-db\n        engine: mysql\n        engineVersion: "8.0"\n        instanceClass: rds.mysql.c1.large\n        username: oamtest\n        secretName: db-conn\n\n    - name: sample-oss\n      type: alibaba-oss\n      properties:\n        name: velaweb\n        secretName: oss-conn\n')),Object(a.b)("p",null,"Apply it and verify the application."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl port-forward deployment/express-server 80:80\nForwarding from 127.0.0.1:80 -> 80\nForwarding from [::1]:80 -> 80\nHandling connection for 80\nHandling connection for 80\n")),Object(a.b)("p",null,Object(a.b)("img",{src:t(440).default})),Object(a.b)("h2",{id:"provision-and-consume-cloud-resource-in-different-applications"},"Provision and consume cloud resource in different applications"),Object(a.b)("p",null,"In this section, cloud resource will be provisioned in one application and consumed in another application."),Object(a.b)("h3",{id:"provision-cloud-resource"},"Provision Cloud Resource"),Object(a.b)("p",null,"Instantiate RDS component with ",Object(a.b)("inlineCode",{parentName:"p"},"alibaba-rds")," workload type in an ",Object(a.b)("a",{parentName:"p",href:"../application"},"Application")," to provide cloud resources."),Object(a.b)("p",null,"As we have claimed an RDS instance with ComponentDefinition name ",Object(a.b)("inlineCode",{parentName:"p"},"alibaba-rds"),".\nThe component in the application should refer to this type."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: baas-rds\nspec:\n  components:\n    - name: sample-db\n      type: alibaba-rds\n      properties:\n        name: sample-db\n        engine: mysql\n        engineVersion: "8.0"\n        instanceClass: rds.mysql.c1.large\n        username: oamtest\n        secretName: db-conn\n')),Object(a.b)("p",null,"Apply the application to Kubernetes and a RDS instance will be automatically provisioned (may take some time, ~2 mins)."),Object(a.b)("p",null,"A secret ",Object(a.b)("inlineCode",{parentName:"p"},"db-conn")," will also be created in the same namespace as that of the application."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get application\nNAME       AGE\nbaas-rds   9h\n\n$ kubectl get rdsinstance\nNAME           READY   SYNCED   STATE     ENGINE   VERSION   AGE\nsample-db-v1   True    True     Running   mysql    8.0       9h\n\n$ kubectl get secret\nNAME                                              TYPE                                  DATA   AGE\ndb-conn                                           connection.crossplane.io/v1alpha1     4      9h\n\n$ \u2717 kubectl get secret db-conn -o yaml\napiVersion: v1\ndata:\n  endpoint: xxx==\n  password: yyy\n  port: MzMwNg==\n  username: b2FtdGVzdA==\nkind: Secret\n")),Object(a.b)("h3",{id:"consume-the-cloud-resource"},"Consume the Cloud Resource"),Object(a.b)("p",null,"In this section, we will show how another component consumes the RDS instance."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"Note: we recommend defining the cloud resource claiming to an independent application if that cloud resource has\nstandalone lifecycle.")),Object(a.b)("p",null,"Now create the Application to consume the data."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: express-server\n      type: webconsumer\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n        dbSecret: db-conn\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get application\nNAME       AGE\nbaas-rds   10h\nwebapp     14h\n\n$ kubectl get deployment\nNAME                READY   UP-TO-DATE   AVAILABLE   AGE\nexpress-server-v1   1/1     1            1           9h\n\n$ kubectl port-forward deployment/express-server 80:80\n")),Object(a.b)("p",null,"We can see the cloud resource is successfully consumed by the application."),Object(a.b)("p",null,Object(a.b)("img",{src:t(388).default})))}p.isMDXComponent=!0},333:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=o.a.createContext({}),p=function(e){var n=o.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=p(e.components);return o.a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},b=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(t),b=r,m=u["".concat(s,".").concat(b)]||u[b]||d[b]||a;return t?o.a.createElement(m,c(c({ref:n},l),{},{components:t})):o.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=b;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var l=2;l<a;l++)s[l]=t[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},388:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/crossplane-visit-application-b6aa490a07025d258b6d0ad00cd9a055.jpg"},440:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/crossplane-visit-application-v2-ca5eb3887f73effb77711f38ab658025.jpg"}}]);