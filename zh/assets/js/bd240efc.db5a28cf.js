(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{274:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var o=n(3),r=n(7),a=(n(0),n(341)),l={title:"Application Rollout"},p={unversionedId:"end-user/rollout-app",id:"version-v1.0/end-user/rollout-app",isDocsHomePage:!1,title:"Application Rollout",description:"In this documentation, we will show how to use the rollout plan within application to do progressive rollout.",source:"@site/versioned_docs/version-v1.0/end-user/rollout-app.md",slug:"/end-user/rollout-app",permalink:"/zh/docs/end-user/rollout-app",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/zh/end-user/rollout-app.md",version:"v1.0",lastUpdatedBy:"Jianbo Sun",lastUpdatedAt:1619772878,formattedLastUpdatedAt:"4/30/2021",sidebar:"version-v1.0/docs",previous:{title:"Define Application Health Probe",permalink:"/zh/docs/end-user/health"},next:{title:"Resource Model",permalink:"/zh/docs/platform-engineers/overview"}},i=[{value:"Overview",id:"overview",children:[]},{value:"User Workflow",id:"user-workflow",children:[]},{value:"Using AppRollout to adopt Application with rolloutPlan",id:"using-approllout-to-adopt-application-with-rolloutplan",children:[]}],c={toc:i};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In this documentation, we will show how to use the rollout plan within application to do progressive rollout."),Object(a.b)("h2",{id:"overview"},"Overview"),Object(a.b)("p",null,"By default, when we update the spec of Application, KubeVela will update workload directly which relies on the underlying workload to provide availability."),Object(a.b)("p",null,"KubeVela provides a unified progressive rollout mechanism, you can specify the ",Object(a.b)("inlineCode",{parentName:"p"},"spec.rolloutPlan")," in application to do so."),Object(a.b)("h2",{id:"user-workflow"},"User Workflow"),Object(a.b)("p",null,"Here is the end to end user experience based on Deployment"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"Deploy application to the cluster"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\nname: test-rolling\nspec:\ncomponents:\n  - name: metrics-provider\n    type: worker\n    properties:\n      cmd:\n        - ./podinfo\n        - stress-cpu=1.0\n      image: stefanprodan/podinfo:4.0.6\n      port: 8080\nrolloutPlan:\n  rolloutStrategy: "IncreaseFirst"\n  rolloutBatches:\n    - replicas: 50%\n    - replicas: 50%\n  targetSize: 6\n'))),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},"User can  modify the application container command and apply"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\nname: test-rolling\nspec:\ncomponents:\n  - name: metrics-provider\n    type: worker\n    properties:\n      cmd:\n        - ./podinfo\n        - stress-cpu=2.0\n      image: stefanprodan/podinfo:4.0.6\n      port: 8080\nrolloutPlan:\n  rolloutStrategy: "IncreaseFirst"\n  rolloutBatches:\n    - replicas: 50%\n    - replicas: 50%\n  targetSize: 6\n')))),Object(a.b)("p",null,"User can check the status of the Application and see the rollout completes, and the\nApplication's ",Object(a.b)("inlineCode",{parentName:"p"},"status.rollout.rollingState")," becomes ",Object(a.b)("inlineCode",{parentName:"p"},"rolloutSucceed")),Object(a.b)("h2",{id:"using-approllout-to-adopt-application-with-rolloutplan"},"Using AppRollout to adopt Application with rolloutPlan"),Object(a.b)("p",null,"Sometimes, we want to use ",Object(a.b)("a",{parentName:"p",href:"../rollout/rollout"},"AppRollout")," to adopt the Application Rollout, so we can use the ",Object(a.b)("inlineCode",{parentName:"p"},"AppRollout")," to specify more specific revision. The ",Object(a.b)("inlineCode",{parentName:"p"},"AppRollout")," can both rollout or revert the version of application."),Object(a.b)("p",null,"If you want to let ",Object(a.b)("inlineCode",{parentName:"p"},"AppRollout")," adopt the Application with ",Object(a.b)("inlineCode",{parentName:"p"},"rolloutPlan"),", please add the annotations in application to tell ",Object(a.b)("inlineCode",{parentName:"p"},"AppRollout")," to adopt rollout, and clean the strategy in ",Object(a.b)("inlineCode",{parentName:"p"},"spec.rolloutPlan")," to avoid conflicts."),Object(a.b)("p",null,"eg. to let AppRollout adopt the application above, you should update the application like below:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-shell"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: test-rolling\n  annotations:\n    "app.oam.dev/rolling-components": "metrics-provider"\n    "app.oam.dev/rollout-template": "true"\nspec:\n  components:\n    - name: metrics-provider\n      type: worker\n      properties:\n        cmd:\n          - ./podinfo\n          - stress-cpu=2.0\n        image: stefanprodan/podinfo:4.0.6\n        port: 8080\n')),Object(a.b)("p",null,"Please refer to ",Object(a.b)("a",{parentName:"p",href:"../rollout/rollout"},"AppRollout")," to learn more details."))}s.isMDXComponent=!0},341:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),r=n.n(o);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),b=o,m=u["".concat(l,".").concat(b)]||u[b]||d[b]||a;return n?r.a.createElement(m,p(p({ref:t},c),{},{components:n})):r.a.createElement(m,p({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=b;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var c=2;c<a;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);