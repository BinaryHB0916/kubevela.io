(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{285:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return i})),t.d(n,"default",(function(){return p}));var r=t(3),a=t(7),o=(t(0),t(341)),s={title:"Cloud Services"},c={unversionedId:"end-user/components/cloud-services",id:"end-user/components/cloud-services",isDocsHomePage:!1,title:"Cloud Services",description:"KubeVela allows you to declare cloud services your application needs in consistent API. Currently, we support both Terraform and Crossplane.",source:"@site/docs/end-user/components/cloud-services.md",slug:"/end-user/components/cloud-services",permalink:"/zh/docs/next/end-user/components/cloud-services",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/zh/end-user/components/cloud-services.md",version:"current",lastUpdatedBy:"kubevela-bot",lastUpdatedAt:1620154848,formattedLastUpdatedAt:"5/4/2021",sidebar:"docs",previous:{title:"Worker",permalink:"/zh/docs/next/end-user/components/worker"},next:{title:"Want More?",permalink:"/zh/docs/next/end-user/components/more"}},i=[{value:"Terraform",id:"terraform",children:[{value:"Alibaba Cloud RDS and OSS",id:"alibaba-cloud-rds-and-oss",children:[]}]},{value:"Crossplane",id:"crossplane",children:[{value:"Alibaba Cloud RDS and OSS",id:"alibaba-cloud-rds-and-oss-1",children:[]}]},{value:"Verify",id:"verify",children:[]}],l={toc:i};function p(e){var n=e.components,s=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,s,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"KubeVela allows you to declare cloud services your application needs in consistent API. Currently, we support both Terraform and Crossplane."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Please check ",Object(o.b)("a",{parentName:"p",href:"../../platform-engineers/cloud-services"},"the platform team guide for cloud services")," if you are interested in how these capabilities are maintained in KubeVela.")),Object(o.b)("p",null,"The cloud services will be consumed by the application via ",Object(o.b)("a",{parentName:"p",href:"../traits/service-binding"},"Service Binding Trait"),"."),Object(o.b)("h2",{id:"terraform"},"Terraform"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f This section assumes ",Object(o.b)("a",{parentName:"p",href:"../../platform-engineers/terraform"},"Terraform related capabilities")," have been installed in your platform.")),Object(o.b)("p",null,"Check the parameters of cloud resource components and trait."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl vela show alibaba-rds\n# Properties\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n|            NAME            |                               DESCRIPTION                               |                           TYPE                            | REQUIRED | DEFAULT |\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n| bucket                     | OSS bucket name                                                         | string                                                    | true     |         |\n| acl                        | OSS bucket ACL, supported 'private', 'public-read', 'public-read-write' | string                                                    | true     |         |\n| writeConnectionSecretToRef | The secret which the cloud resource connection will be written to       | [writeConnectionSecretToRef](#writeConnectionSecretToRef) | false    |         |\n+----------------------------+-------------------------------------------------------------------------+-----------------------------------------------------------+----------+---------+\n\n\n## writeConnectionSecretToRef\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n|   NAME    |                                 DESCRIPTION                                 |  TYPE  | REQUIRED | DEFAULT |\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n| name      | The secret name which the cloud resource connection will be written to      | string | true     |         |\n| namespace | The secret namespace which the cloud resource connection will be written to | string | false    |         |\n+-----------+-----------------------------------------------------------------------------+--------+----------+---------+\n\n\n$ kubectl vela show service-binding\n# Properties\n+-------------+------------------------------------------------+------------------+----------+---------+\n|    NAME     |                  DESCRIPTION                   |       TYPE       | REQUIRED | DEFAULT |\n+-------------+------------------------------------------------+------------------+----------+---------+\n| envMappings | The mapping of environment variables to secret | map[string]{...} | true     |         |\n+-------------+------------------------------------------------+------------------+----------+---------+\n")),Object(o.b)("h3",{id:"alibaba-cloud-rds-and-oss"},"Alibaba Cloud RDS and OSS"),Object(o.b)("p",null,"A sample ",Object(o.b)("a",{parentName:"p",href:"https://github.com/oam-dev/kubevela/tree/master/docs/examples/terraform/cloud-resource-provision-and-consume/application.yaml"},"application")," is as below."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn                                   # 1) If the env name is the same as the secret key, secret key can be omitted.\n              endpoint:\n                secret: db-conn\n                key: DB_HOST                                      # 2) If the env name is different from secret key, secret key has to be set.\n              username:\n                secret: db-conn\n                key: DB_USER\n              # environments refer to oss-conn secret\n              BUCKET_NAME:\n                secret: oss-conn\n\n    - name: sample-db\n      type: alibaba-rds\n      properties:\n        instance_name: sample-db\n        account_name: oamtest\n        password: U34rfwefwefffaked\n        writeConnectionSecretToRef:\n          name: db-conn\n\n    - name: sample-oss\n      type: alibaba-oss\n      properties:\n        bucket: vela-website\n        acl: private\n        writeConnectionSecretToRef:\n          name: oss-conn\n\n\n")),Object(o.b)("h2",{id:"crossplane"},"Crossplane"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f This section assumes ",Object(o.b)("a",{parentName:"p",href:"../../platform-engineers/crossplane"},"Crossplane related capabilities")," have been installed in your platform.")),Object(o.b)("h3",{id:"alibaba-cloud-rds-and-oss-1"},"Alibaba Cloud RDS and OSS"),Object(o.b)("p",null,"Check the parameters of cloud service component:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl vela show alibaba-rds\n\n# Properties\n+---------------+------------------------------------------------+--------+----------+--------------------+\n|     NAME      |                  DESCRIPTION                   |  TYPE  | REQUIRED |      DEFAULT       |\n+---------------+------------------------------------------------+--------+----------+--------------------+\n| engine        | RDS engine                                     | string | true     | mysql              |\n| engineVersion | The version of RDS engine                      | string | true     |                8.0 |\n| instanceClass | The instance class for the RDS                 | string | true     | rds.mysql.c1.large |\n| username      | RDS username                                   | string | true     |                    |\n| secretName    | Secret name which RDS connection will write to | string | true     |                    |\n+---------------+------------------------------------------------+--------+----------+--------------------+\n")),Object(o.b)("p",null,"A sample application is as below."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: webapp\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: zzxwill/flask-web-application:v0.3.1-crossplane\n        ports: 80\n      traits:\n        - type: service-binding\n          properties:\n            envMappings:\n              # environments refer to db-conn secret\n              DB_PASSWORD:\n                secret: db-conn\n                key: password                                     # 1) If the env name is different from secret key, secret key has to be set.\n              endpoint:\n                secret: db-conn                                   # 2) If the env name is the same as the secret key, secret key can be omitted.\n              username:\n                secret: db-conn\n              # environments refer to oss-conn secret\n              BUCKET_NAME:\n                secret: oss-conn\n                key: Bucket\n\n    - name: sample-db\n      type: alibaba-rds\n      properties:\n        name: sample-db\n        engine: mysql\n        engineVersion: "8.0"\n        instanceClass: rds.mysql.c1.large\n        username: oamtest\n        secretName: db-conn\n\n    - name: sample-oss\n      type: alibaba-oss\n      properties:\n        name: velaweb\n        secretName: oss-conn\n')),Object(o.b)("h2",{id:"verify"},"Verify"),Object(o.b)("p",null,"Deploy and verify the application (by either provider is OK)."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get application\nNAME     AGE\nwebapp   46m\n\n$ kubectl port-forward deployment/express-server 80:80\nForwarding from 127.0.0.1:80 -> 80\nForwarding from [::1]:80 -> 80\nHandling connection for 80\nHandling connection for 80\n")),Object(o.b)("p",null,Object(o.b)("img",{src:t(446).default})))}p.isMDXComponent=!0},341:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},b=function(e){var n=p(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),b=p(t),d=r,m=b["".concat(s,".").concat(d)]||b[d]||u[d]||o;return t?a.a.createElement(m,c(c({ref:n},l),{},{components:t})):a.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var l=2;l<o;l++)s[l]=t[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},446:function(e,n,t){"use strict";t.r(n),n.default=t.p+"assets/images/crossplane-visit-application-b6aa490a07025d258b6d0ad00cd9a055.jpg"}}]);