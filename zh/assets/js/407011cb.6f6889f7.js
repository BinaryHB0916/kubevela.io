(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{149:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return i}));var a=t(3),r=t(7),o=(t(0),t(342)),c={title:"Define Application Health Probe"},l={unversionedId:"end-user/scopes/health",id:"end-user/scopes/health",isDocsHomePage:!1,title:"Define Application Health Probe",description:"In this documentation, we will show how to define health probe for application",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/end-user/scopes/health.md",slug:"/end-user/scopes/health",permalink:"/zh/docs/next/end-user/scopes/health",editUrl:"https://github.com/oam-dev/kubevela/edit/master/docs/zh/end-user/scopes/health.md",version:"current",lastUpdatedBy:"yangsoon",lastUpdatedAt:1620312981,formattedLastUpdatedAt:"5/6/2021",sidebar:"docs",previous:{title:"Rollout Plan",permalink:"/zh/docs/next/end-user/scopes/rollout-plan"},next:{title:"Dry-Run and Live-Diff",permalink:"/zh/docs/next/end-user/debug"}},p=[],s={toc:p};function i(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In this documentation, we will show how to define health probe for application"),Object(o.b)("p",null,"1.Create health scope instance."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1alpha2\nkind: HealthScope\nmetadata:\n  name: health-check\n  namespace: default\nspec:\n  probe-interval: 60\n  workloadRefs:\n  - apiVersion: apps/v1\n    kind: Deployment\n    name: express-server\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Create an application with the health scope")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app\nspec:\n  components:\n    - name: express-server\n      type: webservice\n      properties:\n        image: crccheck/hello-world\n        port: 8080 # change port\n        cpu: 0.5 # add requests cpu units\n      scopes:\n        healthscopes.core.oam.dev: health-check\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},"Check app status, will see health scope in ",Object(o.b)("inlineCode",{parentName:"li"},"status.service.scopes"))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get app vela-app -o yaml\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: vela-app\n...\nstatus:\n...\n  services:\n   - healthy: true\n     name: express-server\n     scopes:\n       - apiVersion: core.oam.dev/v1alpha2\n         kind: HealthScope\n         name: health-check\n")),Object(o.b)("p",null,"4.Check health scope status"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"$ kubectl get healthscope health-check -o yaml\n")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1alpha2\nkind: HealthScope\nmetadata:\n  name: health-check\n...\nspec:\n  probe-interval: 60\n  workloadRefs:\n    - apiVersion: apps/v1\n      kind: Deployment\n      name: express-server\nstatus:\n  healthConditions:\n    - componentName: express-server\n      diagnosis: 'Ready:1/1 '\n      healthStatus: HEALTHY\n      targetWorkload:\n        apiVersion: apps/v1\n        kind: Deployment\n        name: express-server\n  scopeHealthCondition:\n    healthStatus: HEALTHY\n    healthyWorkloads: 1\n    total: 1\n")))}i.isMDXComponent=!0},342:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),i=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=i(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},h=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=i(t),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||o;return t?r.a.createElement(m,l(l({ref:n},s),{},{components:t})):r.a.createElement(m,l({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=h;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=t[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,t)}h.displayName="MDXCreateElement"}}]);